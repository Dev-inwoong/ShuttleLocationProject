Index: app/src/main/java/kr/rabbito/shuttlelocationproject/CommunityActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.firebase.database.ChildEventListener\r\nimport com.google.firebase.database.DataSnapshot\r\nimport com.google.firebase.database.DatabaseError\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport kr.rabbito.shuttlelocationproject.adapter.PostAdapter\r\nimport kr.rabbito.shuttlelocationproject.data.Post\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivityCommunityBinding\r\n\r\nclass CommunityActivity : AppCompatActivity() {\r\n\r\n    val TAG :String = \"TAG\"\r\n    private var mBinding: ActivityCommunityBinding? = null\r\n    private val binding get() = mBinding!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        mBinding = ActivityCommunityBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n        overridePendingTransition(0, 0)\r\n        //Log.d(TAG,\"CommunityActivity called()\")\r\n        //postList -> RecyclerView에 나올 post 항목들 저장하는 공간\r\n        val postList = mutableListOf<Post>()\r\n\r\n        val layoutManager = LinearLayoutManager(this)\r\n        layoutManager.reverseLayout = true\r\n        layoutManager.stackFromEnd = true\r\n\r\n        binding.communityRvList.layoutManager = layoutManager\r\n        binding.communityRvList.adapter = PostAdapter(this, postList)\r\n        Log.d(TAG,\"CommunityActivity Adatper called()\")\r\n\r\n        binding.communityBtnPost.setOnClickListener {\r\n            val intent = Intent(this, PostActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n        //Firebase 변화 감지\r\n        FirebaseDatabase.getInstance().getReference(\"Community/Post\")\r\n            .orderByChild(\"postDate\").addChildEventListener(object : ChildEventListener {\r\n                override fun onChildAdded(snapshot: DataSnapshot, previousChildName: String?) {\r\n                    snapshot.let { snapshot ->\r\n                        val post = snapshot.getValue(Post::class.java)\r\n                        post?.let {\r\n                            if (previousChildName == null) {\r\n                                postList.add(it)\r\n                                binding.communityRvList.adapter?.notifyItemInserted(postList.size - 1)\r\n                            } else {\r\n                                val prevIndex =\r\n                                    postList.map { it.postId }.indexOf(previousChildName)\r\n                                postList.add(prevIndex + 1, post)\r\n                                binding.communityRvList.adapter?.notifyItemInserted(prevIndex + 1)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onChildChanged(\r\n                    snapshot: DataSnapshot,\r\n                    previousChildName: String?\r\n                ) {\r\n                    snapshot.let { snapshot ->\r\n                        val post = snapshot.getValue(Post::class.java)\r\n                        post?.let {\r\n                            val prevIndex =\r\n                                postList.map { it.postId }.indexOf(previousChildName)\r\n                            postList[prevIndex + 1] = post\r\n                            binding.communityRvList.adapter?.notifyItemChanged(prevIndex + 1)\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onChildMoved(snapshot: DataSnapshot, previousChildName: String?) {\r\n                    snapshot.let {\r\n                        val post = snapshot.getValue(Post::class.java)\r\n                        post?.let { post ->\r\n                            val existIndex = postList.map{it.postId}.indexOf(post.postId)\r\n                            postList.removeAt(existIndex)\r\n                            binding.communityRvList.adapter?.notifyItemRemoved(existIndex)\r\n                            if (previousChildName == null) {\r\n                                postList.add(post)\r\n                                binding.communityRvList.adapter?.notifyItemChanged(postList.size - 1)\r\n                            } else {\r\n                                val prevIndex =\r\n                                    postList.map { it.postId }.indexOf(previousChildName)\r\n                                postList.add(prevIndex + 1, post)\r\n                                binding.communityRvList.adapter?.notifyItemChanged(prevIndex + 1)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onChildRemoved(snapshot: DataSnapshot) {\r\n                    snapshot.let {\r\n                        val post = snapshot.getValue(Post::class.java)\r\n                        post?.let { post ->\r\n                            val existIndex = postList.map{it.postId}.indexOf(post.postId)\r\n                            postList.removeAt(existIndex)\r\n                            binding.communityRvList.adapter?.notifyItemRemoved(existIndex)\r\n                            binding.communityRvList.adapter?.notifyItemRangeChanged(\r\n                                existIndex,\r\n                                postList.size\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n\r\n                override fun onCancelled(error: DatabaseError) {\r\n                    error.toException().printStackTrace()\r\n                }\r\n            })\r\n    }\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        overridePendingTransition(0, 0)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/CommunityActivity.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/CommunityActivity.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/CommunityActivity.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/CommunityActivity.kt	(date 1654060214913)
@@ -40,6 +40,8 @@
         binding.communityBtnPost.setOnClickListener {
             val intent = Intent(this, PostActivity::class.java)
             startActivity(intent)
+            finish()
+
         }
         //Firebase 변화 감지
         FirebaseDatabase.getInstance().getReference("Community/Post")
Index: app/src/main/res/layout/activity_post_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorWhite\"\r\n    tools:context=\".PostDetailActivity\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/postdetail_cl_top\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"68dp\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                <Button\r\n                    android:id=\"@+id/postdetail_btn_back\"\r\n                    android:layout_width=\"10dp\"\r\n                    android:layout_height=\"22dp\"\r\n                    android:layout_marginStart=\"22dp\"\r\n                    android:layout_marginBottom=\"20dp\"\r\n                    android:background=\"@drawable/icon_back\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/pretendard_medium\"\r\n                    android:includeFontPadding=\"false\"\r\n                    android:text=\"게시글 상세\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"18sp\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@id/postdetail_btn_back\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"@id/postdetail_btn_back\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/postdetail_spn_option\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"280dp\"\r\n                    android:layout_marginTop=\"24dp\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n            \r\n            <ImageView\r\n                android:id=\"@+id/postdetail_iv_content\"\r\n                android:layout_width=\"334dp\"\r\n                android:layout_height=\"437dp\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_cl_top\"\r\n                android:src=\"@drawable/detail_iv_rect_big\"\r\n                android:layout_marginTop=\"17dp\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/postdetail_tv_title\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"27dp\"\r\n                android:layout_marginStart=\"31dp\"\r\n                android:text=\"\"\r\n                android:fontFamily=\"@font/pretendard_semibold\"\r\n                android:includeFontPadding=\"false\"\r\n                android:textColor=\"@color/colorBlack\"\r\n                android:textSize=\"18sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/postdetail_iv_content\"\r\n                app:layout_constraintTop_toTopOf=\"@id/postdetail_iv_content\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/postdetail_tv_content\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"36dp\"\r\n                android:text=\"\"\r\n                android:fontFamily=\"@font/pretendard_regular\"\r\n                android:includeFontPadding=\"false\"\r\n                android:textColor=\"@color/colorBlack\"\r\n                android:textSize=\"16sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/postdetail_tv_title\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_tv_title\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/postdetail_tv_date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"3dp\"\r\n                android:text=\"\"\r\n                android:fontFamily=\"@font/pretendard_regular\"\r\n                android:includeFontPadding=\"false\"\r\n                android:textColor=\"@color/colorGray\"\r\n                android:layout_marginEnd=\"31dp\"\r\n                android:textSize=\"10sp\"\r\n                app:layout_constraintEnd_toEndOf=\"@id/postdetail_iv_content\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_tv_title\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/postdetail_tv_password\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"password : \"\r\n                app:layout_constraintRight_toRightOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_iv_content\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/postdetail_tv_commentdetail\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"답변 내용 : \"\r\n                app:layout_constraintRight_toRightOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_tv_password\" />\r\n\r\n\r\n            <Button\r\n                android:id=\"@+id/postdetail_btn_comment\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"52dp\"\r\n                android:text=\"댓글 등록하기 \"\r\n                app:layout_constraintTop_toBottomOf=\"@id/postdetail_iv_content\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintHorizontal_bias=\"0.498\"\r\n                app:layout_constraintLeft_toLeftOf=\"parent\"\r\n                app:layout_constraintRight_toRightOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/postdetail_et_comment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"댓글을 입력하세요 \"\r\n                android:inputType=\"textPersonName\"\r\n                app:layout_constraintBottom_toTopOf=\"@id/postdetail_btn_comment\"\r\n                app:layout_constraintLeft_toLeftOf=\"parent\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/postdetail_btn_delete\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"삭제하기\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n    </ScrollView>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_post_detail.xml b/app/src/main/res/layout/activity_post_detail.xml
--- a/app/src/main/res/layout/activity_post_detail.xml	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/res/layout/activity_post_detail.xml	(date 1653984154686)
@@ -46,18 +46,27 @@
                     android:textColor="@color/colorPrimary"
                     android:textSize="18sp"
                     app:layout_constraintBottom_toBottomOf="@id/postdetail_btn_back"
-                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintEnd_toStartOf="@id/postdetail_btn_edit"
                     app:layout_constraintStart_toStartOf="parent"
                     app:layout_constraintTop_toTopOf="@id/postdetail_btn_back" />
-
-                <Spinner
-                    android:id="@+id/postdetail_spn_option"
+                <Button
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:layout_marginStart="280dp"
-                    android:layout_marginTop="24dp"
-                    app:layout_constraintStart_toStartOf="parent"
-                    app:layout_constraintTop_toTopOf="parent" />
+                    android:id="@+id/postdetail_btn_edit"
+                    android:text ="수정"
+                    app:layout_constraintEnd_toStartOf="@id/postdetail_btn_delete"
+                    app:layout_constraintTop_toTopOf="parent"
+                    />
+
+                <Button
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/postdetail_btn_delete"
+                    android:text="삭제"
+                    app:layout_constraintEnd_toEndOf="parent"
+                    app:layout_constraintTop_toTopOf="parent"/>
+
+
             </androidx.constraintlayout.widget.ConstraintLayout>
             
             <ImageView
@@ -111,52 +120,39 @@
                 app:layout_constraintEnd_toEndOf="@id/postdetail_iv_content"
                 app:layout_constraintTop_toBottomOf="@id/postdetail_tv_title" />
 
-            <TextView
-                android:id="@+id/postdetail_tv_password"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="password : "
-                app:layout_constraintRight_toRightOf="parent"
-                app:layout_constraintTop_toBottomOf="@id/postdetail_iv_content" />
-
             <TextView
                 android:id="@+id/postdetail_tv_commentdetail"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:text="답변 내용 : "
                 app:layout_constraintRight_toRightOf="parent"
-                app:layout_constraintTop_toBottomOf="@id/postdetail_tv_password" />
+                app:layout_constraintTop_toBottomOf="@+id/postdetail_iv_content" />
 
 
             <Button
                 android:id="@+id/postdetail_btn_comment"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_marginBottom="52dp"
+                android:layout_marginTop="20dp"
                 android:text="댓글 등록하기 "
-                app:layout_constraintTop_toBottomOf="@id/postdetail_iv_content"
                 app:layout_constraintEnd_toEndOf="parent"
                 app:layout_constraintHorizontal_bias="0.498"
                 app:layout_constraintLeft_toLeftOf="parent"
                 app:layout_constraintRight_toRightOf="parent"
-                app:layout_constraintStart_toStartOf="parent" />
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@id/postdetail_iv_content" />
 
             <EditText
                 android:id="@+id/postdetail_et_comment"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
+                android:layout_marginBottom="36dp"
                 android:hint="댓글을 입력하세요 "
                 android:inputType="textPersonName"
                 app:layout_constraintBottom_toTopOf="@id/postdetail_btn_comment"
-                app:layout_constraintLeft_toLeftOf="parent" />
-
-            <Button
-                android:id="@+id/postdetail_btn_delete"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="삭제하기"
                 app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintTop_toTopOf="parent" />
+                app:layout_constraintLeft_toLeftOf="parent"
+                app:layout_constraintStart_toStartOf="parent" />
 
         </androidx.constraintlayout.widget.ConstraintLayout>
     </ScrollView>
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/data/DeleteDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject.data\r\n\r\nimport android.app.Dialog\r\nimport android.content.Context\r\nimport android.view.WindowManager\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport kr.rabbito.shuttlelocationproject.R\r\n\r\nclass DeleteDialog(context:Context) {\r\n\r\n    private val dialog  = Dialog(context)\r\n\r\n    fun showDialog(){\r\n        dialog.setContentView(R.layout.delete_dialog)\r\n        // dialog 크기 조절\r\n        dialog.window!!.setLayout(\r\n            WindowManager.LayoutParams.MATCH_PARENT,\r\n            WindowManager.LayoutParams.WRAP_CONTENT)\r\n        dialog.setCanceledOnTouchOutside(true)\r\n        // 바깥쪽 터치 -> dialog cancel\r\n        dialog.setCancelable(true)\r\n\r\n        val editText = dialog.findViewById<EditText>(R.id.deletedialog_et_password)\r\n        val okBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_delete)\r\n        val cancelBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_cancel)\r\n\r\n        okBtn.setOnClickListener {\r\n            onClickListener.onClicked(editText.text.toString())\r\n            dialog.dismiss()\r\n        }\r\n\r\n        cancelBtn.setOnClickListener {\r\n            dialog.dismiss()\r\n        }\r\n        dialog.show()\r\n    }\r\n    interface ButtonClickListener{\r\n        fun onClicked(text:String)\r\n    }\r\n\r\n    private lateinit var onClickListener:ButtonClickListener\r\n\r\n    fun setOnClickListner(listener: ButtonClickListener){\r\n        onClickListener = listener\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/data/DeleteDialog.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/data/DeleteDialog.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/data/DeleteDialog.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/data/DeleteDialog.kt	(date 1654059439356)
@@ -6,13 +6,17 @@
 import android.widget.Button
 import android.widget.EditText
 import kr.rabbito.shuttlelocationproject.R
-
+//Setting
 class DeleteDialog(context:Context) {
 
     private val dialog  = Dialog(context)
-
     fun showDialog(){
         dialog.setContentView(R.layout.delete_dialog)
+        val editText = dialog.findViewById<EditText>(R.id.deletedialog_et_password)
+        val okBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_delete)
+        val cancelBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_cancel)
+
+
         // dialog 크기 조절
         dialog.window!!.setLayout(
             WindowManager.LayoutParams.MATCH_PARENT,
@@ -21,9 +25,6 @@
         // 바깥쪽 터치 -> dialog cancel
         dialog.setCancelable(true)
 
-        val editText = dialog.findViewById<EditText>(R.id.deletedialog_et_password)
-        val okBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_delete)
-        val cancelBtn = dialog.findViewById<Button>(R.id.deletedialog_btn_cancel)
 
         okBtn.setOnClickListener {
             onClickListener.onClicked(editText.text.toString())
Index: app/src/main/res/layout/activity_setting.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorWhite\"\r\n    tools:context=\".SettingActivity\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <Button\r\n                android:id=\"@+id/button\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Button\" />\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:id=\"@+id/setting_cl_top\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"68dp\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n                <Button\r\n                    android:id=\"@+id/setting_btn_back\"\r\n                    android:layout_width=\"10dp\"\r\n                    android:layout_height=\"22dp\"\r\n                    android:layout_marginStart=\"22dp\"\r\n                    android:layout_marginBottom=\"20dp\"\r\n                    android:background=\"@drawable/icon_back\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/pretendard_medium\"\r\n                    android:includeFontPadding=\"false\"\r\n                    android:text=\"환경 설정\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"18sp\"\r\n                    app:layout_constraintBottom_toBottomOf=\"@id/setting_btn_back\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"@id/setting_btn_back\" />\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/setting_iv_content_info\"\r\n                android:layout_width=\"360dp\"\r\n                android:layout_height=\"127dp\"\r\n                android:layout_marginTop=\"6dp\"\r\n                android:src=\"@drawable/d_setting_btn_item\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/setting_cl_top\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/setting_iv_icon_info\"\r\n                android:layout_width=\"24dp\"\r\n                android:layout_height=\"24dp\"\r\n                android:layout_marginStart=\"45dp\"\r\n                android:src=\"@drawable/setting_icon_info\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/setting_iv_content_info\"\r\n                app:layout_constraintStart_toStartOf=\"@id/setting_iv_content_info\"\r\n                app:layout_constraintTop_toTopOf=\"@id/setting_iv_content_info\" />\r\n\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"86dp\"\r\n                android:layout_marginTop=\"47dp\"\r\n                android:fontFamily=\"@font/pretendard_semibold\"\r\n                android:includeFontPadding=\"false\"\r\n                android:text=\"앱 정보 확인\"\r\n                android:textColor=\"@color/colorBlack\"\r\n                android:textSize=\"16sp\"\r\n                app:layout_constraintStart_toStartOf=\"@id/setting_iv_content_info\"\r\n                app:layout_constraintTop_toTopOf=\"@id/setting_iv_content_info\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"86dp\"\r\n                android:layout_marginBottom=\"41dp\"\r\n                android:fontFamily=\"@font/pretendard_regular\"\r\n                android:includeFontPadding=\"false\"\r\n                android:text=\"앱 정책 및 버전 정보를 확인합니다.\"\r\n                android:textColor=\"@color/colorDarkGray\"\r\n                android:textSize=\"13sp\"\r\n                app:layout_constraintBottom_toBottomOf=\"@id/setting_iv_content_info\"\r\n                app:layout_constraintStart_toStartOf=\"@id/setting_iv_content_info\" />\r\n\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n    </ScrollView>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_setting.xml b/app/src/main/res/layout/activity_setting.xml
--- a/app/src/main/res/layout/activity_setting.xml	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/res/layout/activity_setting.xml	(date 1653984154708)
@@ -20,10 +20,13 @@
             android:layout_height="wrap_content">
 
             <Button
-                android:id="@+id/button"
+                android:id="@+id/setting_btn_Login"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="Button" />
+                android:text="관리자 로그인"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@id/setting_iv_content_info" />
 
             <androidx.constraintlayout.widget.ConstraintLayout
                 android:id="@+id/setting_cl_top"
Index: app/src/main/res/layout/delete_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n    <EditText\r\n        android:id=\"@+id/deletedialog_et_password\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:ems=\"10\"\r\n        android:inputType=\"textPersonName\"\r\n        android:hint=\"게시물 비밀번호를 입력하세요\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/deletedialog_btn_delete\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize = \"15sp\"\r\n            android:layout_marginRight=\"20dp\"\r\n            android:text=\"확인\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/deletedialog_btn_cancel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:textSize = \"15sp\"\r\n            android:layout_marginLeft=\"20dp\"\r\n            android:text=\"취소\" />\r\n    </LinearLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/delete_dialog.xml b/app/src/main/res/layout/delete_dialog.xml
--- a/app/src/main/res/layout/delete_dialog.xml	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/res/layout/delete_dialog.xml	(date 1654058589701)
@@ -12,7 +12,7 @@
         android:layout_height="wrap_content"
         android:ems="10"
         android:inputType="textPersonName"
-        android:hint="게시물 비밀번호를 입력하세요" />
+        android:hint="비밀번호를 입력하세요" />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.TypedValue\r\nimport android.view.View\r\nimport android.widget.RelativeLayout\r\nimport android.widget.ZoomControls\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.android.gms.maps.*\r\nimport com.google.android.gms.maps.model.LatLng\r\nimport com.google.android.gms.maps.model.MarkerOptions\r\nimport kr.rabbito.shuttlelocationproject.data.Location\r\nimport kr.rabbito.shuttlelocationproject.data.tuk_route\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivityMainBinding\r\nimport kr.rabbito.shuttlelocationproject.function.setChildEventListener\r\nimport kr.rabbito.shuttlelocationproject.function.showRoute\r\n\r\nclass MainActivity : AppCompatActivity(), OnMapReadyCallback {\r\n        private var mBinding: ActivityMainBinding? = null\r\n        private val binding get() = mBinding!!\r\n\r\n        private lateinit var map: GoogleMap\r\n        private val postList = mutableListOf<Location>()\r\n\r\n        @SuppressLint(\"ResourceType\")\r\n        @RequiresApi(Build.VERSION_CODES.LOLLIPOP)\r\n        override fun onCreate(savedInstanceState: Bundle?) {\r\n            super.onCreate(savedInstanceState)\r\n            mBinding = ActivityMainBinding.inflate(layoutInflater)\r\n\r\n            setContentView(binding.root)\r\n            overridePendingTransition(0, 0)\r\n\r\n            window.apply {\r\n                decorView.systemUiVisibility =\r\n                    View.SYSTEM_UI_FLAG_LAYOUT_STABLE or\r\n                            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\r\n                statusBarColor = Color.TRANSPARENT\r\n            }\r\n\r\n            val mapFragment = supportFragmentManager\r\n                .findFragmentById(R.id.map) as SupportMapFragment\r\n            mapFragment.getMapAsync(this)\r\n\r\n            //postActivity -> communityActivity에서 btn 구현 완료\r\n//            binding.mainBtnToPost.setOnClickListener {\r\n//                val intent = Intent(this, PostActivity::class.java)\r\n//                startActivity(intent)\r\n//            }\r\n\r\n            // 오류 무시\r\n            val zoomControls = mapFragment.view!!.findViewById<View>(0x1)\r\n\r\n            if (zoomControls != null && zoomControls.layoutParams is RelativeLayout.LayoutParams) {\r\n                // ZoomControl is inside of RelativeLayout\r\n                val params_zoom = zoomControls.layoutParams as RelativeLayout.LayoutParams\r\n\r\n                params_zoom.addRule(RelativeLayout.ALIGN_PARENT_TOP)\r\n                params_zoom.addRule(RelativeLayout.CENTER_VERTICAL)\r\n\r\n                val margin = TypedValue.applyDimension(\r\n                    TypedValue.COMPLEX_UNIT_DIP, 16f,\r\n                    resources.displayMetrics\r\n                ).toInt()\r\n\r\n                val topMargin = resources.displayMetrics.heightPixels / 2 - 40\r\n                params_zoom.setMargins(margin, topMargin, margin, margin)\r\n            }\r\n\r\n            binding.mainIconSbMenu.setOnClickListener {\r\n                val intent = Intent(this, DetailActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n\r\n            binding.mainBtnToCommunity.setOnClickListener {\r\n                val intent = Intent(this, CommunityActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n\r\n            binding.mainBtnToPrefernces.setOnClickListener {\r\n                val intent = Intent(this,SettingActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        override fun onMapReady(googleMap: GoogleMap) {\r\n            map = googleMap\r\n\r\n            // 나침판\r\n            map.uiSettings.isCompassEnabled = true\r\n            // 지도 화면 회전\r\n            map.uiSettings.isRotateGesturesEnabled = true\r\n            // 확대 축소(+-) 버튼\r\n            map.uiSettings.isZoomControlsEnabled = true\r\n\r\n            // Add a marker in Sydney and move the camera\r\n            //val yeouido = LatLng(37.521814, 126.923596)\r\n            //map.addMarker(MarkerOptions().position(yeouido).title(\"Marker in Yeouido\"))\r\n            //map.moveCamera(CameraUpdateFactory.newLatLng(yeouido))\r\n\r\n                // 학교 셔틀 경로\r\n            var school_route = tuk_route\r\n\r\n            showRoute(map, school_route)\r\n\r\n            setChildEventListener(postList, map, \"Driver/tuk\")\r\n        }\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        overridePendingTransition(0, 0)\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/MainActivity.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/MainActivity.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/MainActivity.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/MainActivity.kt	(date 1654058982765)
@@ -14,9 +14,12 @@
 import com.google.android.gms.maps.*
 import com.google.android.gms.maps.model.LatLng
 import com.google.android.gms.maps.model.MarkerOptions
+import com.google.firebase.database.ktx.database
+import com.google.firebase.ktx.Firebase
 import kr.rabbito.shuttlelocationproject.data.Location
 import kr.rabbito.shuttlelocationproject.data.tuk_route
 import kr.rabbito.shuttlelocationproject.databinding.ActivityMainBinding
+import kr.rabbito.shuttlelocationproject.function.hashSHA256
 import kr.rabbito.shuttlelocationproject.function.setChildEventListener
 import kr.rabbito.shuttlelocationproject.function.showRoute
 
@@ -46,12 +49,16 @@
             val mapFragment = supportFragmentManager
                 .findFragmentById(R.id.map) as SupportMapFragment
             mapFragment.getMapAsync(this)
+//비밀번호 firebase에 올리기
+            Firebase.database.getReference("Manager").child("1").setValue("TEST1234".hashSHA256())
+            Firebase.database.getReference("Manager").child("2").setValue("S1L2P3".hashSHA256())
+            Firebase.database.getReference("Manager").child("3").setValue("1P12L23S3".hashSHA256())
+            Firebase.database.getReference("Manager").child("4").setValue("T1E2ST".hashSHA256())
+            Firebase.database.getReference("Manager").child("5").setValue("TEST".hashSHA256())
+            Firebase.database.getReference("Manager").child("6").setValue("mm0k211".hashSHA256())
+
 
-            //postActivity -> communityActivity에서 btn 구현 완료
-//            binding.mainBtnToPost.setOnClickListener {
-//                val intent = Intent(this, PostActivity::class.java)
-//                startActivity(intent)
-//            }
+
 
             // 오류 무시
             val zoomControls = mapFragment.view!!.findViewById<View>(0x1)
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/SettingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject\r\n\r\nimport android.content.Context\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ktx.database\r\nimport com.google.firebase.ktx.Firebase\r\nimport kr.rabbito.shuttlelocationproject.data.Comment\r\nimport kr.rabbito.shuttlelocationproject.data.ManagerDialog\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivityMainBinding\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivitySettingBinding\r\nimport kr.rabbito.shuttlelocationproject.function.hashSHA256\r\n\r\nclass SettingActivity : AppCompatActivity() {\r\n    private var mBinding: ActivitySettingBinding? = null\r\n    private val binding get() = mBinding!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        mBinding = ActivitySettingBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n        overridePendingTransition(0, 0)\r\n\r\n        val shared = getSharedPreferences(\"Mode\", Context.MODE_PRIVATE)\r\n        val editor = shared.edit()\r\n\r\n\r\n        binding.button.setOnClickListener {\r\n            val dialog = ManagerDialog(this)\r\n            dialog.showDialog()\r\n            dialog.setOnClickListner(object:ManagerDialog.ButtonClickListener{\r\n                override fun onClicked(text:String){\r\n\r\n                    val inputPassword = text\r\n\r\n                    //DB에 저장된 Password 일치하는지 조회\r\n                    Firebase.database.getReference(\"Manager\").\r\n                    get().addOnCompleteListener {task ->\r\n                        if (task.isSuccessful){\r\n                            val dbPassword = task.result.value\r\n                            // 답변 내용 어떤 형식으로 출력?\r\n                            // 답변 없을 경우 게시판에 답변 어떻게 노출?\r\n                            if (inputPassword == dbPassword){\r\n                                editor.putString(\"mode\",\"Manager\")\r\n                                editor.apply()\r\n                            }\r\n                            else{\r\n                                Toast.makeText(this@SettingActivity,\"비밀번호를 잘못 입력하셨습니다.\",Toast.LENGTH_SHORT).show()\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        binding.settingBtnBack.setOnClickListener {\r\n            finish()\r\n        }\r\n    }\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        overridePendingTransition(0, 0)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/SettingActivity.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/SettingActivity.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/SettingActivity.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/SettingActivity.kt	(date 1654058013826)
@@ -3,10 +3,12 @@
 import android.content.Context
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
+import android.util.Log
 import android.view.View
 import android.widget.Toast
 import com.google.firebase.database.FirebaseDatabase
 import com.google.firebase.database.ktx.database
+import com.google.firebase.database.ktx.getValue
 import com.google.firebase.ktx.Firebase
 import kr.rabbito.shuttlelocationproject.data.Comment
 import kr.rabbito.shuttlelocationproject.data.ManagerDialog
@@ -18,6 +20,8 @@
     private var mBinding: ActivitySettingBinding? = null
     private val binding get() = mBinding!!
 
+    val pwdPath = listOf("1","2","3","4","5","6")
+    val PWD = mutableListOf<String>()
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         mBinding = ActivitySettingBinding.inflate(layoutInflater)
@@ -25,35 +29,49 @@
         setContentView(binding.root)
         overridePendingTransition(0, 0)
 
+
         val shared = getSharedPreferences("Mode", Context.MODE_PRIVATE)
         val editor = shared.edit()
 
-
-        binding.button.setOnClickListener {
+        //관리자 로그인 버튼 클릭
+        binding.settingBtnLogin.setOnClickListener {
             val dialog = ManagerDialog(this)
             dialog.showDialog()
             dialog.setOnClickListner(object:ManagerDialog.ButtonClickListener{
                 override fun onClicked(text:String){
+                    //inputPassword : 사용자가 입력한 PWD
+                    val inputPassword = text.hashSHA256()
+                    //Log.d("TAG","hashPWD : ${inputPassword.hashSHA256()}")
 
-                    val inputPassword = text
+                    //pwdPath : Firebase에 저장되어 있는 key 값
+                    //dbPasspword : 이미 등록되어 있는 PWD.hashSHA226() 값
 
-                    //DB에 저장된 Password 일치하는지 조회
-                    Firebase.database.getReference("Manager").
-                    get().addOnCompleteListener {task ->
-                        if (task.isSuccessful){
-                            val dbPassword = task.result.value
-                            // 답변 내용 어떤 형식으로 출력?
-                            // 답변 없을 경우 게시판에 답변 어떻게 노출?
-                            if (inputPassword == dbPassword){
-                                editor.putString("mode","Manager")
-                                editor.apply()
-                            }
-                            else{
-                                Toast.makeText(this@SettingActivity,"비밀번호를 잘못 입력하셨습니다.",Toast.LENGTH_SHORT).show()
-
-                            }
-                        }
+                    for(i in pwdPath.indices){
+                        //루프 돌며 이미 등록되어 있는 관리자 비밀와 inputPassword 비교
+                        Firebase.database.getReference("Manager").child("$i").
+                        get().addOnCompleteListener {task ->
+                            if (task.isSuccessful){
+                                val dbPassword = task.result.getValue()
+                                PWD.add(dbPassword.toString())
+
+
+                            }
+                        }
+                    }
+
+                    //사용자 입력 비밀번호가 Manager PWD 리스트에 있는지 검사
+                    if (inputPassword in PWD) {
+                        editor.putString("UserMode", "Manager")
+                        editor.apply()
+
+                        Toast.makeText(this@SettingActivity, "관리자로 로그인 되었습니다.", Toast.LENGTH_SHORT)
+                            .show()
+                        finish()
+                    }
+                    else{
+                            Toast.makeText(this@SettingActivity,"비밀번호가 일치하지 않습니다.",Toast.LENGTH_SHORT).show()
                     }
+
                 }
             })
         }
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/PostDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.AdapterView\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ktx.database\r\nimport com.google.firebase.ktx.Firebase\r\nimport kr.rabbito.shuttlelocationproject.data.Comment\r\nimport kr.rabbito.shuttlelocationproject.data.DeleteDialog\r\nimport kr.rabbito.shuttlelocationproject.data.Post\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivityPostDetailBinding\r\nimport kr.rabbito.shuttlelocationproject.function.hashSHA256\r\n\r\nclass PostDetailActivity : AppCompatActivity() {\r\n    private var mBinding: ActivityPostDetailBinding? = null\r\n    private val binding get() = mBinding!!\r\n    val TAG: String = \"TAG\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        mBinding = ActivityPostDetailBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n        overridePendingTransition(0, 0)\r\n        Log.d(TAG, \"PostDetailActivity called()\")\r\n\r\n        val shared = getSharedPreferences(\"Mode\", Context.MODE_PRIVATE)\r\n        val mode = shared.getString(\"mode\", \"User\")\r\n\r\n        if (mode != \"Manager\") {\r\n            binding.postdetailEtComment.visibility = View.INVISIBLE\r\n            binding.postdetailBtnComment.visibility = View.INVISIBLE\r\n        }\r\n\r\n        //intent에 담긴 bundle -> post에 풀기\r\n        val bundle = intent.extras\r\n        val post = bundle!!.getParcelable<Post>(\"selectedPost\")!!\r\n\r\n        val comment = Comment()\r\n\r\n        //Toast.makeText(this,\"ClcikListener 실행 완료 \",Toast.LENGTH_SHORT).show()\r\n        val commentRef = FirebaseDatabase.getInstance().getReference(\"Community/Comment\")\r\n        val postRef = FirebaseDatabase.getInstance().getReference(\"Community/Post\")\r\n        //key == commentId\r\n        val commentKey = commentRef.push().key!!\r\n\r\n        //deleteBtn -> deleteDialog show()\r\n        binding.postdetailBtnDelete.setOnClickListener {\r\n\r\n        }\r\n\r\n        // post_detail.xml\r\n        binding.postdetailTvTitle.text = post.postTitle\r\n        binding.postdetailTvContent.text = post.postContent\r\n        binding.postdetailTvDate.text = post.postDate\r\n        binding.postdetailTvPassword.text = post.postPassword\r\n\r\n\r\n        //comment 없을 경우 NullPointerException 예외 처리?\r\n\r\n        //TODO(\r\n        Firebase.database.getReference(\"Community/Comment\").child(post.postCommentId).get()\r\n            .addOnCompleteListener { task ->\r\n                if (task.isSuccessful) {\r\n                    val comment = task.result.getValue(Comment::class.java)\r\n                    // 답변 내용 어떤 형식으로 출력?\r\n                    // 답변 없을 경우 게시판에 답변 어떻게 노출?\r\n                    if (comment?.comment != null) {\r\n                        //comment 너무 늦게 뜸\r\n                        binding.postdetailTvCommentdetail.text = \"답변 내용 : \" + comment.comment\r\n                    } else {\r\n                        binding.postdetailTvCommentdetail.visibility = View.INVISIBLE\r\n\r\n                    }\r\n                } else {\r\n                    binding.postdetailTvCommentdetail.visibility = View.INVISIBLE\r\n                }\r\n            }\r\n\r\n        var data = listOf(\"목록\", \"수정하기\", \"삭제하기\")\r\n        var adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, data)\r\n        binding.postdetailSpnOption.adapter = adapter\r\n        binding.postdetailSpnOption.onItemSelectedListener =\r\n            object : AdapterView.OnItemSelectedListener {\r\n                override fun onItemSelected(\r\n                    parent: AdapterView<*>?,\r\n                    view: View?,\r\n                    position: Int,\r\n                    id: Long\r\n                ) {\r\n                    if (position == 1) {\r\n                        var intent = Intent(this@PostDetailActivity, PostActivity::class.java)\r\n                        intent.putExtra(\"post\", post)\r\n                        intent.putExtra(\"PostMode\", \"Edit\")\r\n                        intent.putExtra(\"PostId\", post.postId)\r\n                        intent.putExtra(\"PostPassword\", post.postPassword)\r\n                        startActivity(intent)\r\n\r\n                    } else if (position == 2) {\r\n                        val dialog = DeleteDialog(this@PostDetailActivity)\r\n                        dialog.showDialog()\r\n                        dialog.setOnClickListner(object : DeleteDialog.ButtonClickListener {\r\n                            override fun onClicked(text: String) {\r\n                                val inputPassword = text.hashSHA256()\r\n                                Toast.makeText(\r\n                                    this@PostDetailActivity,\r\n                                    inputPassword,\r\n                                    Toast.LENGTH_SHORT\r\n                                ).show()\r\n                                if (inputPassword == post.postPassword) {\r\n                                    //post 삭제\r\n                                    postRef.child(post.postId).removeValue()\r\n                                    //comment 삭제\r\n                                    commentRef.child(post.postCommentId).removeValue()\r\n                                    Toast.makeText(\r\n                                        this@PostDetailActivity,\r\n                                        \"삭제 완료\",\r\n                                        Toast.LENGTH_SHORT\r\n                                    ).show()\r\n                                    finish()\r\n                                } else {\r\n                                    Toast.makeText(\r\n                                        this@PostDetailActivity,\r\n                                        \"비밀번호가 틀렸습니다.\",\r\n                                        Toast.LENGTH_SHORT\r\n                                    ).show()\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                override fun onNothingSelected(parent: AdapterView<*>?) {\r\n                    TODO(\"Not yet implemented\")\r\n                }\r\n\r\n            }\r\n\r\n\r\n        //key == commentId / firebase upload\r\n        binding.postdetailBtnComment.setOnClickListener {\r\n            postRef.child(post.postId).child(\"postCommentId\").setValue(commentKey)\r\n            comment.postId = post.postId\r\n            comment.comment = binding.postdetailEtComment.text.toString()\r\n            comment.commentId = commentKey\r\n            commentRef.child(commentKey).setValue(comment)\r\n            Toast.makeText(this, \"Comment 등록 완료\", Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        overridePendingTransition(0, 0)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/PostDetailActivity.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/PostDetailActivity.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/PostDetailActivity.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/PostDetailActivity.kt	(date 1654059963122)
@@ -33,9 +33,11 @@
         Log.d(TAG, "PostDetailActivity called()")
 
         val shared = getSharedPreferences("Mode", Context.MODE_PRIVATE)
-        val mode = shared.getString("mode", "User")
+        //저장되어 있는 UserMode 값 getString / default Value : User
+        val loginMode = shared.getString("UserMode", "User")
 
-        if (mode != "Manager") {
+        //UserMode : User 일 경우 comment 관련 INVISIBLE
+        if (loginMode != "Manager") {
             binding.postdetailEtComment.visibility = View.INVISIBLE
             binding.postdetailBtnComment.visibility = View.INVISIBLE
         }
@@ -52,16 +54,11 @@
         //key == commentId
         val commentKey = commentRef.push().key!!
 
-        //deleteBtn -> deleteDialog show()
-        binding.postdetailBtnDelete.setOnClickListener {
-
-        }
 
         // post_detail.xml
         binding.postdetailTvTitle.text = post.postTitle
         binding.postdetailTvContent.text = post.postContent
         binding.postdetailTvDate.text = post.postDate
-        binding.postdetailTvPassword.text = post.postPassword
 
 
         //comment 없을 경우 NullPointerException 예외 처리?
@@ -71,10 +68,7 @@
             .addOnCompleteListener { task ->
                 if (task.isSuccessful) {
                     val comment = task.result.getValue(Comment::class.java)
-                    // 답변 내용 어떤 형식으로 출력?
-                    // 답변 없을 경우 게시판에 답변 어떻게 노출?
                     if (comment?.comment != null) {
-                        //comment 너무 늦게 뜸
                         binding.postdetailTvCommentdetail.text = "답변 내용 : " + comment.comment
                     } else {
                         binding.postdetailTvCommentdetail.visibility = View.INVISIBLE
@@ -85,65 +79,54 @@
                 }
             }
 
-        var data = listOf("목록", "수정하기", "삭제하기")
-        var adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, data)
-        binding.postdetailSpnOption.adapter = adapter
-        binding.postdetailSpnOption.onItemSelectedListener =
-            object : AdapterView.OnItemSelectedListener {
-                override fun onItemSelected(
-                    parent: AdapterView<*>?,
-                    view: View?,
-                    position: Int,
-                    id: Long
-                ) {
-                    if (position == 1) {
-                        var intent = Intent(this@PostDetailActivity, PostActivity::class.java)
-                        intent.putExtra("post", post)
-                        intent.putExtra("PostMode", "Edit")
-                        intent.putExtra("PostId", post.postId)
-                        intent.putExtra("PostPassword", post.postPassword)
-                        startActivity(intent)
-
-                    } else if (position == 2) {
-                        val dialog = DeleteDialog(this@PostDetailActivity)
-                        dialog.showDialog()
-                        dialog.setOnClickListner(object : DeleteDialog.ButtonClickListener {
-                            override fun onClicked(text: String) {
-                                val inputPassword = text.hashSHA256()
-                                Toast.makeText(
-                                    this@PostDetailActivity,
-                                    inputPassword,
-                                    Toast.LENGTH_SHORT
-                                ).show()
-                                if (inputPassword == post.postPassword) {
-                                    //post 삭제
-                                    postRef.child(post.postId).removeValue()
-                                    //comment 삭제
-                                    commentRef.child(post.postCommentId).removeValue()
-                                    Toast.makeText(
-                                        this@PostDetailActivity,
-                                        "삭제 완료",
-                                        Toast.LENGTH_SHORT
-                                    ).show()
-                                    finish()
-                                } else {
-                                    Toast.makeText(
-                                        this@PostDetailActivity,
-                                        "비밀번호가 틀렸습니다.",
-                                        Toast.LENGTH_SHORT
-                                    ).show()
-                                }
-                            }
-                        })
-                    }
+        // 게시물 수정하기 삭제하기 ->
+        binding.postdetailBtnDelete.setOnClickListener {
+            val dialog = DeleteDialog(this@PostDetailActivity)
+            dialog.showDialog()
+            dialog.setOnClickListner(object : DeleteDialog.ButtonClickListener {
+                override fun onClicked(text: String) {
+                    val inputPassword = text.hashSHA256()
+                    Toast.makeText(this@PostDetailActivity, inputPassword, Toast.LENGTH_SHORT).show()
+                    //입력한 비밀번호와 post에 저장되어 있는 게시물 비밀번호 같을 경우
+                    if (inputPassword == post.postPassword) {
+                        //post 삭제
+                        postRef.child(post.postId).removeValue()
+                        //comment 삭제
+                        commentRef.child(post.postCommentId).removeValue()
+                        Toast.makeText(this@PostDetailActivity, "삭제 완료", Toast.LENGTH_SHORT).show()
+                        finish()
+                    } else { // 게시물 비밀번호 다를 경우
+                        Toast.makeText(this@PostDetailActivity, "비밀번호가 틀렸습니다.", Toast.LENGTH_SHORT).show()
+                    }
+                }
+            })
 
-                }
+        }
+        binding.postdetailBtnEdit.setOnClickListener {
+            //deleteDialog 재 사용 -> editText.setText() 사용
+            val dialog = DeleteDialog(this@PostDetailActivity)
 
-                override fun onNothingSelected(parent: AdapterView<*>?) {
-                    TODO("Not yet implemented")
+            dialog.showDialog()
+            dialog.setOnClickListner(object : DeleteDialog.ButtonClickListener {
+                override fun onClicked(text: String) {
+                    val inputPassword = text.hashSHA256()
+                    //Toast.makeText(this@PostDetailActivity, inputPassword, Toast.LENGTH_SHORT).show()
+                    //입력한 비밀번호와 post에 저장되어 있는 게시물 비밀번호 같을 경우
+                    if (inputPassword == post.postPassword) {
+                        val intent = Intent(this@PostDetailActivity, PostActivity::class.java)
+                        intent.putExtra("post", post)
+                        intent.putExtra("PostMode", "Edit")
+                        intent.putExtra("PostId", post.postId)
+                        intent.putExtra("PostPassword", post.postPassword)
+                        startActivity(intent)
+                        //post 삭제
+                        finish()
+                    } else { // 게시물 비밀번호 다를 경우
+                        Toast.makeText(this@PostDetailActivity, "게시물 비밀번호가 틀렸습니다.", Toast.LENGTH_SHORT).show()
+                    }
                 }
-
-            }
+            })
+        }
 
 
         //key == commentId / firebase upload
@@ -154,6 +137,7 @@
             comment.commentId = commentKey
             commentRef.child(commentKey).setValue(comment)
             Toast.makeText(this, "Comment 등록 완료", Toast.LENGTH_SHORT).show()
+            finish()
         }
     }
 
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/PostActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ServerValue\r\nimport com.google.firebase.ktx.Firebase\r\nimport kr.rabbito.shuttlelocationproject.data.Post\r\nimport kr.rabbito.shuttlelocationproject.databinding.ActivityPostBinding\r\nimport kr.rabbito.shuttlelocationproject.function.hashSHA256\r\n\r\nclass PostActivity : AppCompatActivity() {\r\n    private var mBinding: ActivityPostBinding? = null\r\n    private val binding get() = mBinding!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        mBinding = ActivityPostBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n        overridePendingTransition(0, 0)\r\n\r\n        val mode = intent.getStringExtra(\"PostMode\") ?: \"temp\"\r\n        if(mode == \"Edit\"){\r\n            binding.postBtnPost.visibility = View.INVISIBLE\r\n            binding.postBtnEdit.visibility = View.VISIBLE\r\n\r\n            val bundle = intent.extras\r\n            val tmpPost = bundle?.getParcelable<Post>(\"post\")\r\n            with(binding){\r\n                postEtTitle.setText(tmpPost?.postTitle)\r\n                postEtContent.setText(tmpPost?.postContent)\r\n            }\r\n        }\r\n        //post -> userInput Value 담을 객체\r\n        val post = Post()\r\n        val ref = FirebaseDatabase.getInstance().getReference(\"Community/Post\")\r\n\r\n        // Key = PostKey\r\n        val key = ref.push().key!!\r\n\r\n        // user input -> Post -> Firebase 등록\r\n        binding.postBtnPost.setOnClickListener {\r\n            post.postTitle = binding.postEtTitle.text.toString()\r\n            post.postContent = binding.postEtContent.text.toString()\r\n            //password -> 암호화하여 등록\r\n            post.postPassword = binding.postEtPassword.text.toString().hashSHA256()\r\n            post.postDate = System.currentTimeMillis().toString()\r\n            post.postId = key\r\n            // post.postCommentId -> 임시 등록\r\n            post.postCommentId = \"\"\r\n\r\n            //Firebase upload\r\n            ref.child(key).setValue(post)\r\n            finish()\r\n        }\r\n\r\n        binding.postBtnEdit.setOnClickListener {\r\n            val tmpPostPassword = intent.getStringExtra(\"PostPassword\")\r\n            val tmpPostId = intent.getStringExtra(\"PostId\")\r\n\r\n            post.postTitle = binding.postEtTitle.text.toString()\r\n            post.postContent = binding.postEtContent.text.toString()\r\n            //password -> 암호화하여 등록\r\n            post.postPassword = binding.postEtPassword.text.toString().hashSHA256()\r\n            post.postDate = System.currentTimeMillis().toString()\r\n            post.postId = tmpPostId!!\r\n\r\n            if (post.postPassword == tmpPostPassword){\r\n                ref.child(post.postId).setValue(post)\r\n                val intent = Intent(this,CommunityActivity::class.java)\r\n                startActivity(intent)\r\n                finish()\r\n            }\r\n            else{\r\n                Toast.makeText(this,\"비밀번호가 일치하지 않습니다.\",Toast.LENGTH_SHORT).show()\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    override fun finish() {\r\n        super.finish()\r\n        overridePendingTransition(0, 0)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/PostActivity.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/PostActivity.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/PostActivity.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/PostActivity.kt	(date 1654057867714)
@@ -27,7 +27,6 @@
         if(mode == "Edit"){
             binding.postBtnPost.visibility = View.INVISIBLE
             binding.postBtnEdit.visibility = View.VISIBLE
-
             val bundle = intent.extras
             val tmpPost = bundle?.getParcelable<Post>("post")
             with(binding){
@@ -40,10 +39,12 @@
         val ref = FirebaseDatabase.getInstance().getReference("Community/Post")
 
         // Key = PostKey
-        val key = ref.push().key!!
 
         // user input -> Post -> Firebase 등록
         binding.postBtnPost.setOnClickListener {
+
+            val key = ref.push().key!!
+
             post.postTitle = binding.postEtTitle.text.toString()
             post.postContent = binding.postEtContent.text.toString()
             //password -> 암호화하여 등록
@@ -76,6 +77,7 @@
                 finish()
             }
             else{
+                //비밀번호 입력 제한 해야하나?
                 Toast.makeText(this,"비밀번호가 일치하지 않습니다.",Toast.LENGTH_SHORT).show()
 
             }
Index: app/src/main/java/kr/rabbito/shuttlelocationproject/adapter/PostAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package kr.rabbito.shuttlelocationproject.adapter\r\n\r\nimport android.app.AlertDialog\r\nimport android.app.Dialog\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.ViewGroup\r\nimport android.widget.AdapterView\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ktx.database\r\nimport com.google.firebase.ktx.Firebase\r\nimport kr.rabbito.shuttlelocationproject.PostDetailActivity\r\nimport kr.rabbito.shuttlelocationproject.data.Post\r\nimport kr.rabbito.shuttlelocationproject.databinding.PostCardBinding\r\nimport kr.rabbito.shuttlelocationproject.viewHolder.PostViewHolder\r\nimport java.util.stream.DoubleStream.builder\r\n\r\nclass PostAdapter(val context: Context,\r\n                  private val dataList: MutableList<Post>):\r\n    RecyclerView.Adapter<PostViewHolder>() {\r\n\r\n    private val dialog = Dialog(context)\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PostViewHolder {\r\n        val binding = PostCardBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n        Log.d(TAG,\"PostAdapter called()\")\r\n\r\n        return PostViewHolder(binding)\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return dataList.size\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.LOLLIPOP)\r\n    override fun onBindViewHolder(holder: PostViewHolder, position: Int) {\r\n        holder.bind(dataList[position],context)\r\n\r\n        holder.itemView.setOnClickListener{\r\n            val intent = Intent(context,PostDetailActivity::class.java)\r\n            //intent.putExtra(\"postId\",dataList[position].postId)\r\n            val bundle = Bundle()\r\n            bundle.putParcelable(\"selectedPost\",dataList[position])\r\n            intent.putExtras(bundle)\r\n            Log.d(TAG,\"OnBindViewHolder called()\")\r\n\r\n            context.startActivity(intent)\r\n        }\r\n\r\n        //RecyclerView LongClickListener 구현 -> 삭제\r\n//        holder.itemView.setOnLongClickListener {\r\n//            val builder = AlertDialog.Builder(context)\r\n//\r\n//            builder.setTitle(\"삭제하시겠습니까?\")\r\n//                .setMessage(\"제목 : \"+dataList[position].postTitle)\r\n//                .setPositiveButton(\"삭제\"){_,_->\r\n//\r\n//                    //dialog에 editText(user input password) 추가하여 password 일치 확인\r\n//                    //if (dataList.position)\r\n//                    Firebase.database.getReference(\"Community\").child(dataList[position].postId)\r\n//                        .removeValue()\r\n//                }\r\n//                .setNegativeButton(\"취소\"){_,_->\r\n//                }.show()\r\n//\r\n//            true\r\n//        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/kr/rabbito/shuttlelocationproject/adapter/PostAdapter.kt b/app/src/main/java/kr/rabbito/shuttlelocationproject/adapter/PostAdapter.kt
--- a/app/src/main/java/kr/rabbito/shuttlelocationproject/adapter/PostAdapter.kt	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/app/src/main/java/kr/rabbito/shuttlelocationproject/adapter/PostAdapter.kt	(date 1654060539768)
@@ -1,5 +1,7 @@
 package kr.rabbito.shuttlelocationproject.adapter
 
+import android.accounts.AccountManager.get
+import android.app.Activity
 import android.app.AlertDialog
 import android.app.Dialog
 import android.content.ContentValues.TAG
@@ -52,6 +54,7 @@
             Log.d(TAG,"OnBindViewHolder called()")
 
             context.startActivity(intent)
+            (context as Activity).finish()
         }
 
         //RecyclerView LongClickListener 구현 -> 삭제
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_main.xml\" value=\"0.2484375\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_post.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_post_detail.xml\" value=\"0.39361702127659576\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_setting.xml\" value=\"0.1583710407239819\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/alram_dialog.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/delete_dialog.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/ShuttleLocationProject_V2/app/src/main/res/layout/manager_dialog.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable-xxxhdpi/tv_d_buttontext.xml\" value=\"0.3475\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable-xxxhdpi/tv_d_buttontext_primary.xml\" value=\"0.3038095238095238\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/d_detail_btn_schedule.xml\" value=\"0.319\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/d_main_btn_to_community.xml\" value=\"0.299\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/d_main_to_community.xml\" value=\"0.319\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/d_main_to_setting.xml\" value=\"0.319\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/d_post_btn_post.xml\" value=\"0.319\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/drawable/top_corner_radius.xml\" value=\"0.319\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_community.xml\" value=\"0.4009259259259259\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_detail.xml\" value=\"0.3976851851851852\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_loading.xml\" value=\"0.3976851851851852\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_main.xml\" value=\"0.3976851851851852\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_post.xml\" value=\"0.40324074074074073\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_post_detail.xml\" value=\"0.3976851851851852\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/activity_setting.xml\" value=\"0.3976851851851852\" />\r\n        <entry key=\"..\\:/Users/chiho/AndroidStudioProjects/ShuttleLocationProject/app/src/main/res/layout/post_card.xml\" value=\"0.45925925925925926\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision db413ebf5768418d3b7b1339fd6cf3129d33b6da)
+++ b/.idea/misc.xml	(date 1653984154789)
@@ -5,8 +5,8 @@
       <map>
         <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_main.xml" value="0.2484375" />
         <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_post.xml" value="0.264" />
-        <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_post_detail.xml" value="0.39361702127659576" />
-        <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_setting.xml" value="0.1583710407239819" />
+        <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_post_detail.xml" value="0.1" />
+        <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/activity_setting.xml" value="0.264" />
         <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/alram_dialog.xml" value="0.2" />
         <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/delete_dialog.xml" value="0.16666666666666666" />
         <entry key="..\:/ShuttleLocationProject_V2/app/src/main/res/layout/manager_dialog.xml" value="0.1" />
